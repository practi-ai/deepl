import tensorflow as tf
from tensorflow.keras import datasets,layers, models, optimizers
import matplotlib.pyplot as plt

(train_images,train_lables),(test_images,test_lables) =datasets.cifar10.load_data()
train_images,test_images= train_images/255.0, test_images/255.0

model= models.Sequential([
    layers.Flatten(input_shape=(32,32,3)),
    layers.Dense(512, activation='relu'),
    layers.Dense(256,activation='tanh'),
    layers.Dense(128,activation='relu'),
    layers.Dense(10,activation='softmax')
])

optimizer= optimizers.Adam(learning_rate=0.001, beta_1=0.9,beta_2=0.999)
model.compile(optimizer=optimizer, loss='sparse_categorical_crossentropy', metrics=['accuracy'])
history=model.fit(train_images,train_lables,epochs=15,batch_size=128,validation_data=(test_images,test_lables))

test_loss, test_acc = model.evaluate(test_images, test_lables, verbose=2)
print(f"Test accuracy: {test_acc}")


plt.figure(figsize=(12,4))

plt.subplot(1,2,1)
plt.plot(history.history['accuracy'])
plt.plot(history.history['val_accuracy'])
plt.title('Model Accuracy')
plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.legend(['Train', 'Test'],loc='upper left')

plt.subplot(1,2,2)
plt.plot(history.history['loss'])
plt.plot(history.history['val_loss'])
plt.title('Model loss')
plt.xlabel('Epoch')
plt.ylabel('loss')
plt.legend(['Train', 'Test'],loc='upper left')

plt.show()
